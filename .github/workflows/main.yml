env:
  # AWS_REGION: eu-central-1
  # ECR_REPOSITORY: devops
  # ECS_SERVICE: arn:aws:ecs:eu-central-1:688567301327:service/Replication-Cluster/replication_service
  # ECS_CLUSTER: arn:aws:ecs:eu-central-1:688567301327:cluster/Replication-Cluster
  # ECS_TASK_DEFINITION: .github/workflows/replication_service_task_definition.json
  CONTAINER_NAME: replication_service

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build_test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Install RClone
        run: |
          sudo apt install rclone

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r ./api/requirements.txt
          pip install -e ./api
          
      - name: Run all unit tests
        run: |
          pytest ./api/swagger_server/test/unit_tests/
      
      ############# DISABLED DUE MISSING KEYS #############
      # - name: Checkout
      #   uses: actions/checkout@v4
  
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ env.AWS_REGION }}
  
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
  
      # - name: Build, tag, and push image to Amazon ECR
      #   id: build-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./api/Dockerfile ./api
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV
      #     echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
          
      # - name: Fill in the new image ID in the Amazon ECS task definition
      #   id: task-def
      #   uses: aws-actions/amazon-ecs-render-task-definition@v1
      #   with:
      #     task-definition: ${{ env.ECS_TASK_DEFINITION }}
      #     container-name: "replication_service"
      #     image: ${{ env.image }}
  
      # - name: Deploy Amazon ECS task definition
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     task-definition: ${{ steps.task-def.outputs.task-definition }}
      #     service: ${{ env.ECS_SERVICE }}
      #     cluster: ${{ env.ECS_CLUSTER }}
      #     wait-for-service-stability: true  
