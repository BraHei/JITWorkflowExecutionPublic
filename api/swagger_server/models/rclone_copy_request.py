# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RcloneCopyRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, source: str=None, destination: str=None, parallel_files: int=1, files: List[str]=None):  # noqa: E501
        """RcloneCopyRequest - a model defined in Swagger

        :param source: The source of this RcloneCopyRequest.  # noqa: E501
        :type source: str
        :param destination: The destination of this RcloneCopyRequest.  # noqa: E501
        :type destination: str
        :param parallel_files: The parallel_files of this RcloneCopyRequest.  # noqa: E501
        :type parallel_files: int
        :param files: The files of this RcloneCopyRequest.  # noqa: E501
        :type files: List[str]
        """
        self.swagger_types = {
            'source': str,
            'destination': str,
            'parallel_files': int,
            'files': List[str]
        }

        self.attribute_map = {
            'source': 'source',
            'destination': 'destination',
            'parallel_files': 'parallel_files',
            'files': 'files'
        }
        self._source = source
        self._destination = destination
        self._parallel_files = parallel_files
        self._files = files

    @classmethod
    def from_dict(cls, dikt) -> 'RcloneCopyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RcloneCopyRequest of this RcloneCopyRequest.  # noqa: E501
        :rtype: RcloneCopyRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source(self) -> str:
        """Gets the source of this RcloneCopyRequest.


        :return: The source of this RcloneCopyRequest.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source: str):
        """Sets the source of this RcloneCopyRequest.


        :param source: The source of this RcloneCopyRequest.
        :type source: str
        """

        self._source = source

    @property
    def destination(self) -> str:
        """Gets the destination of this RcloneCopyRequest.


        :return: The destination of this RcloneCopyRequest.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination: str):
        """Sets the destination of this RcloneCopyRequest.


        :param destination: The destination of this RcloneCopyRequest.
        :type destination: str
        """

        self._destination = destination

    @property
    def parallel_files(self) -> int:
        """Gets the parallel_files of this RcloneCopyRequest.


        :return: The parallel_files of this RcloneCopyRequest.
        :rtype: int
        """
        return self._parallel_files

    @parallel_files.setter
    def parallel_files(self, parallel_files: int):
        """Sets the parallel_files of this RcloneCopyRequest.


        :param parallel_files: The parallel_files of this RcloneCopyRequest.
        :type parallel_files: int
        """

        self._parallel_files = parallel_files

    @property
    def files(self) -> List[str]:
        """Gets the files of this RcloneCopyRequest.


        :return: The files of this RcloneCopyRequest.
        :rtype: List[str]
        """
        return self._files

    @files.setter
    def files(self, files: List[str]):
        """Sets the files of this RcloneCopyRequest.


        :param files: The files of this RcloneCopyRequest.
        :type files: List[str]
        """

        self._files = files
